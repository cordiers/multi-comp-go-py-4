syntax = "proto3";

option go_package = "github.com/n0stack/n0stack/n0proto.go/pool/v0;ppool";

package n0stack.pool.v0;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "n0stack/budget/v0/network_interface.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "n0stack";
    contact: {
      name: "n0stack";
      url: "https://github.com/n0stack/n0stack";
    };
  };
  
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};


message Network {
  // Name is a unique field.
  string name = 1;
  // string namespace = 2;

  // Annotations can store metadata used by the system for control.
  // In particular, implementation-dependent fields that can not be set as protobuf fields are targeted.
  // The control specified by n0stack may delete metadata specified by the user.
  map<string, string> annotations = 3;

  // Labels stores user-defined metadata.
  // The n0stack system must not rewrite this value.
  map<string, string> labels = 4;

  string ipv4_cidr = 10;
  string ipv6_cidr = 11;
  string domain = 12;

  enum NetworkState {
    // falied state because failed some process on API.
    NETWORK_UNSPECIFIED = 0;

    // unknown state because failed to connect for scheduled node after RUNNING.
    UNKNOWN = 1;

    AVAILABLE = 2;
  }
  NetworkState state = 50;

  map<string, n0stack.budget.v0.NetworkInterface> reserved_network_interfaces = 51;
}


service NetworkService {
  rpc ListNetworks(ListNetworksRequest) returns (ListNetworksResponse) {
    option (google.api.http) = {
      get: "/api/v0/network"
    };
  }
  rpc GetNetwork(GetNetworkRequest) returns (Network) {
    option (google.api.http) = {
      get: "/api/v0/network/{name}"
    };
  }
  rpc ApplyNetwork(ApplyNetworkRequest) returns (Network) {
    option (google.api.http) = {
      put: "/api/v0/network/{name}"
      body: "*"
    };
  }
  rpc DeleteNetwork(DeleteNetworkRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v0/network/{name}"
    };
  }

  rpc ReserveNetworkInterface(ReserveNetworkInterfaceRequest) returns (Network) {}
  rpc ReleaseNetworkInterface(ReleaseNetworkInterfaceRequest) returns (google.protobuf.Empty) {}
}


message ListNetworksRequest {}
message ListNetworksResponse{
  repeated Network networks = 1;
}

message GetNetworkRequest {
  string name = 1;
}

message ApplyNetworkRequest {
  string name = 1;
  map<string, string> annotations = 3;
  map<string, string> labels = 4;

  string ipv4_cidr = 10;
  string ipv6_cidr = 11;
  string domain = 12;
}

message DeleteNetworkRequest {
  string name = 1;
}

message ReserveNetworkInterfaceRequest {
  string network_name = 1;
  string network_interface_name = 2;

  map<string, string> annotations = 3;

  string hardware_address = 4;

  string ipv4_address = 5;
  string ipv6_address = 6;
}

message ReleaseNetworkInterfaceRequest {
  string network_name = 1;
  string network_interface_name = 2;
}
