// Code generated by protoc-gen-go. DO NOT EDIT.
// source: configuration/v0/ssh_execution.proto

package pconfiguration // import "github.com/n0stack/n0stack/n0proto.go/configuration/v0"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SSHExecutionResult struct {
	VirtualMachineName   string               `protobuf:"bytes,1,opt,name=virtual_machine_name,json=virtualMachineName" json:"virtual_machine_name,omitempty"`
	KeySecretName        string               `protobuf:"bytes,2,opt,name=key_secret_name,json=keySecretName" json:"key_secret_name,omitempty"`
	StartedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`
	FinishedAt           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=finished_at,json=finishedAt" json:"finished_at,omitempty"`
	Output               string               `protobuf:"bytes,5,opt,name=output" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SSHExecutionResult) Reset()         { *m = SSHExecutionResult{} }
func (m *SSHExecutionResult) String() string { return proto.CompactTextString(m) }
func (*SSHExecutionResult) ProtoMessage()    {}
func (*SSHExecutionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{0}
}
func (m *SSHExecutionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSHExecutionResult.Unmarshal(m, b)
}
func (m *SSHExecutionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSHExecutionResult.Marshal(b, m, deterministic)
}
func (dst *SSHExecutionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSHExecutionResult.Merge(dst, src)
}
func (m *SSHExecutionResult) XXX_Size() int {
	return xxx_messageInfo_SSHExecutionResult.Size(m)
}
func (m *SSHExecutionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SSHExecutionResult.DiscardUnknown(m)
}

var xxx_messageInfo_SSHExecutionResult proto.InternalMessageInfo

func (m *SSHExecutionResult) GetVirtualMachineName() string {
	if m != nil {
		return m.VirtualMachineName
	}
	return ""
}

func (m *SSHExecutionResult) GetKeySecretName() string {
	if m != nil {
		return m.KeySecretName
	}
	return ""
}

func (m *SSHExecutionResult) GetStartedAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *SSHExecutionResult) GetFinishedAt() *timestamp.Timestamp {
	if m != nil {
		return m.FinishedAt
	}
	return nil
}

func (m *SSHExecutionResult) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type SSHExecution struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Commands             []string          `protobuf:"bytes,10,rep,name=commands" json:"commands,omitempty"`
	Results              []string          `protobuf:"bytes,50,rep,name=results" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SSHExecution) Reset()         { *m = SSHExecution{} }
func (m *SSHExecution) String() string { return proto.CompactTextString(m) }
func (*SSHExecution) ProtoMessage()    {}
func (*SSHExecution) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{1}
}
func (m *SSHExecution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSHExecution.Unmarshal(m, b)
}
func (m *SSHExecution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSHExecution.Marshal(b, m, deterministic)
}
func (dst *SSHExecution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSHExecution.Merge(dst, src)
}
func (m *SSHExecution) XXX_Size() int {
	return xxx_messageInfo_SSHExecution.Size(m)
}
func (m *SSHExecution) XXX_DiscardUnknown() {
	xxx_messageInfo_SSHExecution.DiscardUnknown(m)
}

var xxx_messageInfo_SSHExecution proto.InternalMessageInfo

func (m *SSHExecution) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SSHExecution) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *SSHExecution) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

func (m *SSHExecution) GetResults() []string {
	if m != nil {
		return m.Results
	}
	return nil
}

type ListSSHExecutionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSSHExecutionsRequest) Reset()         { *m = ListSSHExecutionsRequest{} }
func (m *ListSSHExecutionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSSHExecutionsRequest) ProtoMessage()    {}
func (*ListSSHExecutionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{2}
}
func (m *ListSSHExecutionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSSHExecutionsRequest.Unmarshal(m, b)
}
func (m *ListSSHExecutionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSSHExecutionsRequest.Marshal(b, m, deterministic)
}
func (dst *ListSSHExecutionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSSHExecutionsRequest.Merge(dst, src)
}
func (m *ListSSHExecutionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSSHExecutionsRequest.Size(m)
}
func (m *ListSSHExecutionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSSHExecutionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSSHExecutionsRequest proto.InternalMessageInfo

type ListSSHExecutionsResponse struct {
	Sshs                 []*SSHExecution `protobuf:"bytes,1,rep,name=sshs" json:"sshs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListSSHExecutionsResponse) Reset()         { *m = ListSSHExecutionsResponse{} }
func (m *ListSSHExecutionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSSHExecutionsResponse) ProtoMessage()    {}
func (*ListSSHExecutionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{3}
}
func (m *ListSSHExecutionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSSHExecutionsResponse.Unmarshal(m, b)
}
func (m *ListSSHExecutionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSSHExecutionsResponse.Marshal(b, m, deterministic)
}
func (dst *ListSSHExecutionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSSHExecutionsResponse.Merge(dst, src)
}
func (m *ListSSHExecutionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSSHExecutionsResponse.Size(m)
}
func (m *ListSSHExecutionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSSHExecutionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSSHExecutionsResponse proto.InternalMessageInfo

func (m *ListSSHExecutionsResponse) GetSshs() []*SSHExecution {
	if m != nil {
		return m.Sshs
	}
	return nil
}

type GetSSHExecutionRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSSHExecutionRequest) Reset()         { *m = GetSSHExecutionRequest{} }
func (m *GetSSHExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*GetSSHExecutionRequest) ProtoMessage()    {}
func (*GetSSHExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{4}
}
func (m *GetSSHExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSSHExecutionRequest.Unmarshal(m, b)
}
func (m *GetSSHExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSSHExecutionRequest.Marshal(b, m, deterministic)
}
func (dst *GetSSHExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSSHExecutionRequest.Merge(dst, src)
}
func (m *GetSSHExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_GetSSHExecutionRequest.Size(m)
}
func (m *GetSSHExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSSHExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSSHExecutionRequest proto.InternalMessageInfo

func (m *GetSSHExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplySSHExecutionRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Annotations          map[string]string `protobuf:"bytes,3,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Commands             []string          `protobuf:"bytes,10,rep,name=commands" json:"commands,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ApplySSHExecutionRequest) Reset()         { *m = ApplySSHExecutionRequest{} }
func (m *ApplySSHExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*ApplySSHExecutionRequest) ProtoMessage()    {}
func (*ApplySSHExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{5}
}
func (m *ApplySSHExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplySSHExecutionRequest.Unmarshal(m, b)
}
func (m *ApplySSHExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplySSHExecutionRequest.Marshal(b, m, deterministic)
}
func (dst *ApplySSHExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplySSHExecutionRequest.Merge(dst, src)
}
func (m *ApplySSHExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_ApplySSHExecutionRequest.Size(m)
}
func (m *ApplySSHExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplySSHExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplySSHExecutionRequest proto.InternalMessageInfo

func (m *ApplySSHExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApplySSHExecutionRequest) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ApplySSHExecutionRequest) GetCommands() []string {
	if m != nil {
		return m.Commands
	}
	return nil
}

type DeleteSSHExecutionRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSSHExecutionRequest) Reset()         { *m = DeleteSSHExecutionRequest{} }
func (m *DeleteSSHExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSSHExecutionRequest) ProtoMessage()    {}
func (*DeleteSSHExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{6}
}
func (m *DeleteSSHExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSSHExecutionRequest.Unmarshal(m, b)
}
func (m *DeleteSSHExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSSHExecutionRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteSSHExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSSHExecutionRequest.Merge(dst, src)
}
func (m *DeleteSSHExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSSHExecutionRequest.Size(m)
}
func (m *DeleteSSHExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSSHExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSSHExecutionRequest proto.InternalMessageInfo

func (m *DeleteSSHExecutionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RunSSHExecutionRequest struct {
	Filter               *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter `protobuf:"bytes,1,opt,name=filter" json:"filter,omitempty"`
	Username             string                                                   `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	KeySecretName        string                                                   `protobuf:"bytes,3,opt,name=key_secret_name,json=keySecretName" json:"key_secret_name,omitempty"`
	EnvironmentVariables map[string]string                                        `protobuf:"bytes,4,rep,name=environment_variables,json=environmentVariables" json:"environment_variables,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}                                                 `json:"-"`
	XXX_unrecognized     []byte                                                   `json:"-"`
	XXX_sizecache        int32                                                    `json:"-"`
}

func (m *RunSSHExecutionRequest) Reset()         { *m = RunSSHExecutionRequest{} }
func (m *RunSSHExecutionRequest) String() string { return proto.CompactTextString(m) }
func (*RunSSHExecutionRequest) ProtoMessage()    {}
func (*RunSSHExecutionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{7}
}
func (m *RunSSHExecutionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunSSHExecutionRequest.Unmarshal(m, b)
}
func (m *RunSSHExecutionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunSSHExecutionRequest.Marshal(b, m, deterministic)
}
func (dst *RunSSHExecutionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunSSHExecutionRequest.Merge(dst, src)
}
func (m *RunSSHExecutionRequest) XXX_Size() int {
	return xxx_messageInfo_RunSSHExecutionRequest.Size(m)
}
func (m *RunSSHExecutionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunSSHExecutionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunSSHExecutionRequest proto.InternalMessageInfo

func (m *RunSSHExecutionRequest) GetFilter() *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter {
	if m != nil {
		return m.Filter
	}
	return nil
}

func (m *RunSSHExecutionRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *RunSSHExecutionRequest) GetKeySecretName() string {
	if m != nil {
		return m.KeySecretName
	}
	return ""
}

func (m *RunSSHExecutionRequest) GetEnvironmentVariables() map[string]string {
	if m != nil {
		return m.EnvironmentVariables
	}
	return nil
}

type RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Label                map[string]string `protobuf:"bytes,2,rep,name=label" json:"label,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) Reset() {
	*m = RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter{}
}
func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) String() string {
	return proto.CompactTextString(m)
}
func (*RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) ProtoMessage() {}
func (*RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_ssh_execution_e5fd6d8a5c336024, []int{7, 0}
}
func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter.Unmarshal(m, b)
}
func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter.Marshal(b, m, deterministic)
}
func (dst *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter.Merge(dst, src)
}
func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) XXX_Size() int {
	return xxx_messageInfo_RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter.Size(m)
}
func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter.DiscardUnknown(m)
}

var xxx_messageInfo_RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter proto.InternalMessageInfo

func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter) GetLabel() map[string]string {
	if m != nil {
		return m.Label
	}
	return nil
}

func init() {
	proto.RegisterType((*SSHExecutionResult)(nil), "n0stack.configuration.SSHExecutionResult")
	proto.RegisterType((*SSHExecution)(nil), "n0stack.configuration.SSHExecution")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.configuration.SSHExecution.AnnotationsEntry")
	proto.RegisterType((*ListSSHExecutionsRequest)(nil), "n0stack.configuration.ListSSHExecutionsRequest")
	proto.RegisterType((*ListSSHExecutionsResponse)(nil), "n0stack.configuration.ListSSHExecutionsResponse")
	proto.RegisterType((*GetSSHExecutionRequest)(nil), "n0stack.configuration.GetSSHExecutionRequest")
	proto.RegisterType((*ApplySSHExecutionRequest)(nil), "n0stack.configuration.ApplySSHExecutionRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.configuration.ApplySSHExecutionRequest.AnnotationsEntry")
	proto.RegisterType((*DeleteSSHExecutionRequest)(nil), "n0stack.configuration.DeleteSSHExecutionRequest")
	proto.RegisterType((*RunSSHExecutionRequest)(nil), "n0stack.configuration.RunSSHExecutionRequest")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.configuration.RunSSHExecutionRequest.EnvironmentVariablesEntry")
	proto.RegisterType((*RunSSHExecutionRequest_SSHExecutionVirtualMachineFilter)(nil), "n0stack.configuration.RunSSHExecutionRequest.SSHExecutionVirtualMachineFilter")
	proto.RegisterMapType((map[string]string)(nil), "n0stack.configuration.RunSSHExecutionRequest.SSHExecutionVirtualMachineFilter.LabelEntry")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SSHExecutionService service

type SSHExecutionServiceClient interface {
	ListSSHExecutions(ctx context.Context, in *ListSSHExecutionsRequest, opts ...grpc.CallOption) (*ListSSHExecutionsResponse, error)
	GetSSHExecution(ctx context.Context, in *GetSSHExecutionRequest, opts ...grpc.CallOption) (*SSHExecution, error)
	ApplySSHExecution(ctx context.Context, in *ApplySSHExecutionRequest, opts ...grpc.CallOption) (*SSHExecution, error)
	DeleteSSHExecution(ctx context.Context, in *DeleteSSHExecutionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// TODO: `returns (stream ...)` looks more good, but stream is not supported by n0cli.
	RunSSHExecution(ctx context.Context, in *RunSSHExecutionRequest, opts ...grpc.CallOption) (*SSHExecutionResult, error)
}

type sSHExecutionServiceClient struct {
	cc *grpc.ClientConn
}

func NewSSHExecutionServiceClient(cc *grpc.ClientConn) SSHExecutionServiceClient {
	return &sSHExecutionServiceClient{cc}
}

func (c *sSHExecutionServiceClient) ListSSHExecutions(ctx context.Context, in *ListSSHExecutionsRequest, opts ...grpc.CallOption) (*ListSSHExecutionsResponse, error) {
	out := new(ListSSHExecutionsResponse)
	err := grpc.Invoke(ctx, "/n0stack.configuration.SSHExecutionService/ListSSHExecutions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sSHExecutionServiceClient) GetSSHExecution(ctx context.Context, in *GetSSHExecutionRequest, opts ...grpc.CallOption) (*SSHExecution, error) {
	out := new(SSHExecution)
	err := grpc.Invoke(ctx, "/n0stack.configuration.SSHExecutionService/GetSSHExecution", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sSHExecutionServiceClient) ApplySSHExecution(ctx context.Context, in *ApplySSHExecutionRequest, opts ...grpc.CallOption) (*SSHExecution, error) {
	out := new(SSHExecution)
	err := grpc.Invoke(ctx, "/n0stack.configuration.SSHExecutionService/ApplySSHExecution", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sSHExecutionServiceClient) DeleteSSHExecution(ctx context.Context, in *DeleteSSHExecutionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := grpc.Invoke(ctx, "/n0stack.configuration.SSHExecutionService/DeleteSSHExecution", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sSHExecutionServiceClient) RunSSHExecution(ctx context.Context, in *RunSSHExecutionRequest, opts ...grpc.CallOption) (*SSHExecutionResult, error) {
	out := new(SSHExecutionResult)
	err := grpc.Invoke(ctx, "/n0stack.configuration.SSHExecutionService/RunSSHExecution", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SSHExecutionService service

type SSHExecutionServiceServer interface {
	ListSSHExecutions(context.Context, *ListSSHExecutionsRequest) (*ListSSHExecutionsResponse, error)
	GetSSHExecution(context.Context, *GetSSHExecutionRequest) (*SSHExecution, error)
	ApplySSHExecution(context.Context, *ApplySSHExecutionRequest) (*SSHExecution, error)
	DeleteSSHExecution(context.Context, *DeleteSSHExecutionRequest) (*empty.Empty, error)
	// TODO: `returns (stream ...)` looks more good, but stream is not supported by n0cli.
	RunSSHExecution(context.Context, *RunSSHExecutionRequest) (*SSHExecutionResult, error)
}

func RegisterSSHExecutionServiceServer(s *grpc.Server, srv SSHExecutionServiceServer) {
	s.RegisterService(&_SSHExecutionService_serviceDesc, srv)
}

func _SSHExecutionService_ListSSHExecutions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSSHExecutionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSHExecutionServiceServer).ListSSHExecutions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.configuration.SSHExecutionService/ListSSHExecutions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSHExecutionServiceServer).ListSSHExecutions(ctx, req.(*ListSSHExecutionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SSHExecutionService_GetSSHExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSSHExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSHExecutionServiceServer).GetSSHExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.configuration.SSHExecutionService/GetSSHExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSHExecutionServiceServer).GetSSHExecution(ctx, req.(*GetSSHExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SSHExecutionService_ApplySSHExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplySSHExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSHExecutionServiceServer).ApplySSHExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.configuration.SSHExecutionService/ApplySSHExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSHExecutionServiceServer).ApplySSHExecution(ctx, req.(*ApplySSHExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SSHExecutionService_DeleteSSHExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSSHExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSHExecutionServiceServer).DeleteSSHExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.configuration.SSHExecutionService/DeleteSSHExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSHExecutionServiceServer).DeleteSSHExecution(ctx, req.(*DeleteSSHExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SSHExecutionService_RunSSHExecution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunSSHExecutionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SSHExecutionServiceServer).RunSSHExecution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/n0stack.configuration.SSHExecutionService/RunSSHExecution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SSHExecutionServiceServer).RunSSHExecution(ctx, req.(*RunSSHExecutionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SSHExecutionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "n0stack.configuration.SSHExecutionService",
	HandlerType: (*SSHExecutionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListSSHExecutions",
			Handler:    _SSHExecutionService_ListSSHExecutions_Handler,
		},
		{
			MethodName: "GetSSHExecution",
			Handler:    _SSHExecutionService_GetSSHExecution_Handler,
		},
		{
			MethodName: "ApplySSHExecution",
			Handler:    _SSHExecutionService_ApplySSHExecution_Handler,
		},
		{
			MethodName: "DeleteSSHExecution",
			Handler:    _SSHExecutionService_DeleteSSHExecution_Handler,
		},
		{
			MethodName: "RunSSHExecution",
			Handler:    _SSHExecutionService_RunSSHExecution_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "configuration/v0/ssh_execution.proto",
}

func init() {
	proto.RegisterFile("configuration/v0/ssh_execution.proto", fileDescriptor_ssh_execution_e5fd6d8a5c336024)
}

var fileDescriptor_ssh_execution_e5fd6d8a5c336024 = []byte{
	// 735 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0x9b, 0xb4, 0xd0, 0x09, 0xa8, 0xed, 0xd2, 0x46, 0xae, 0x39, 0x10, 0x19, 0x84, 0x82,
	0x04, 0x76, 0x14, 0x90, 0x28, 0x54, 0x42, 0x04, 0x11, 0xc2, 0xa1, 0xf4, 0xe0, 0x54, 0x95, 0xe0,
	0x12, 0x36, 0xee, 0x24, 0xb1, 0x62, 0xaf, 0x8d, 0x77, 0x1d, 0x35, 0x12, 0xdf, 0xc5, 0xff, 0xf0,
	0x03, 0xc0, 0x17, 0x20, 0x94, 0x75, 0xd2, 0x3a, 0x89, 0xad, 0xba, 0xc0, 0x29, 0xd9, 0x9d, 0x99,
	0xb7, 0x6f, 0xdf, 0x8c, 0x9f, 0x0d, 0x0f, 0x6c, 0x9f, 0xf5, 0x9d, 0x41, 0x14, 0x52, 0xe1, 0xf8,
	0xcc, 0x1c, 0xd7, 0x4d, 0xce, 0x87, 0x5d, 0x3c, 0x47, 0x3b, 0x9a, 0x6e, 0x18, 0x41, 0xe8, 0x0b,
	0x9f, 0xec, 0xb1, 0x3a, 0x17, 0xd4, 0x1e, 0x19, 0x0b, 0xd9, 0xda, 0xdd, 0x81, 0xef, 0x0f, 0x5c,
	0x34, 0x65, 0x52, 0x2f, 0xea, 0x9b, 0xe8, 0x05, 0x62, 0x12, 0xd7, 0x68, 0xf7, 0x96, 0x83, 0xc2,
	0xf1, 0x90, 0x0b, 0xea, 0x05, 0x71, 0x82, 0xfe, 0x5b, 0x01, 0xd2, 0xe9, 0xbc, 0x6f, 0xcd, 0xcf,
	0xb2, 0x90, 0x47, 0xae, 0x20, 0x75, 0xd8, 0x1d, 0x3b, 0xa1, 0x88, 0xa8, 0xdb, 0xf5, 0xa8, 0x3d,
	0x74, 0x18, 0x76, 0x19, 0xf5, 0x50, 0x55, 0xaa, 0x4a, 0x6d, 0xd3, 0x22, 0xb3, 0xd8, 0x87, 0x38,
	0x74, 0x4c, 0x3d, 0x24, 0x0f, 0x61, 0x6b, 0x84, 0x93, 0x2e, 0x47, 0x3b, 0x44, 0x11, 0x27, 0xaf,
	0xc9, 0xe4, 0xdb, 0x23, 0x9c, 0x74, 0xe4, 0xae, 0xcc, 0x7b, 0x01, 0xc0, 0x05, 0x0d, 0x05, 0x9e,
	0x75, 0xa9, 0x50, 0x8b, 0x55, 0xa5, 0x56, 0x6e, 0x68, 0x46, 0x4c, 0xd3, 0x98, 0xd3, 0x34, 0x4e,
	0xe6, 0x34, 0xad, 0xcd, 0x59, 0x76, 0x53, 0x90, 0x43, 0x28, 0xf7, 0x1d, 0xe6, 0xf0, 0x61, 0x5c,
	0x5b, 0xba, 0xb2, 0x16, 0xe6, 0xe9, 0x4d, 0x41, 0x2a, 0xb0, 0xe1, 0x47, 0x22, 0x88, 0x84, 0xba,
	0x2e, 0x69, 0xcd, 0x56, 0xfa, 0x2f, 0x05, 0x6e, 0x25, 0x05, 0x20, 0x04, 0x4a, 0x89, 0xab, 0xca,
	0xff, 0xe4, 0x14, 0xca, 0x94, 0x31, 0x5f, 0x48, 0xc5, 0xb9, 0x5a, 0xac, 0x16, 0x6b, 0xe5, 0xc6,
	0x33, 0x23, 0xb5, 0x21, 0x46, 0x12, 0xcd, 0x68, 0x5e, 0x96, 0xb5, 0x98, 0x08, 0x27, 0x56, 0x12,
	0x88, 0x68, 0x70, 0xd3, 0xf6, 0x3d, 0x8f, 0xb2, 0x33, 0xae, 0x42, 0xb5, 0x58, 0xdb, 0xb4, 0x2e,
	0xd6, 0x44, 0x85, 0x1b, 0xa1, 0x6c, 0x06, 0x57, 0x1b, 0x32, 0x34, 0x5f, 0x6a, 0xaf, 0x60, 0x7b,
	0x19, 0x96, 0x6c, 0x43, 0x71, 0x84, 0x93, 0x19, 0xe9, 0xe9, 0x5f, 0xb2, 0x0b, 0xeb, 0x63, 0xea,
	0x46, 0xf3, 0x36, 0xc4, 0x8b, 0x97, 0x6b, 0x07, 0x8a, 0xae, 0x81, 0x7a, 0xe4, 0x70, 0x91, 0xe4,
	0xc9, 0x2d, 0xfc, 0x12, 0x21, 0x17, 0xfa, 0x09, 0xec, 0xa7, 0xc4, 0x78, 0xe0, 0x33, 0x8e, 0xe4,
	0x39, 0x94, 0x38, 0x1f, 0x72, 0x55, 0x91, 0xf7, 0xbf, 0x9f, 0xe3, 0xfe, 0x96, 0x2c, 0xd0, 0x1f,
	0x43, 0xa5, 0x8d, 0x62, 0x71, 0xce, 0xe4, 0x79, 0x69, 0x6a, 0xeb, 0x3f, 0x14, 0x50, 0x9b, 0x41,
	0xe0, 0x4e, 0x72, 0x16, 0x90, 0x5e, 0x5a, 0x7b, 0x5e, 0x67, 0xd0, 0xcb, 0x42, 0xfe, 0xfb, 0x56,
	0xfd, 0x73, 0x43, 0x4c, 0xd8, 0x7f, 0x8b, 0x2e, 0x0a, 0xcc, 0xab, 0xd0, 0xcf, 0x12, 0x54, 0xac,
	0x88, 0xa5, 0xa5, 0xf7, 0x61, 0xa3, 0xef, 0xb8, 0x02, 0x43, 0x59, 0x50, 0x6e, 0x1c, 0x67, 0xc8,
	0x90, 0x5e, 0xbe, 0xd0, 0xbc, 0xd3, 0x85, 0xa7, 0xfc, 0x9d, 0x44, 0xb5, 0x66, 0xe8, 0x53, 0x3d,
	0x22, 0x8e, 0x61, 0xe2, 0x41, 0xbf, 0x58, 0xa7, 0x79, 0x41, 0x31, 0xcd, 0x0b, 0xbe, 0xc2, 0x1e,
	0xb2, 0xb1, 0x13, 0xfa, 0xcc, 0x43, 0x26, 0xba, 0x63, 0x1a, 0x3a, 0xb4, 0xe7, 0x22, 0x57, 0x4b,
	0xb2, 0x83, 0xed, 0xeb, 0x51, 0x6f, 0x5d, 0x42, 0x9d, 0xce, 0x91, 0xe2, 0x46, 0xee, 0x62, 0x4a,
	0x48, 0xfb, 0xae, 0x40, 0xf5, 0xaa, 0xeb, 0xa6, 0x8e, 0x9b, 0x0f, 0xeb, 0x2e, 0xed, 0xa1, 0xab,
	0xae, 0x49, 0x9a, 0x1f, 0xff, 0xaf, 0xc2, 0xc6, 0xd1, 0x14, 0x3b, 0x26, 0x1e, 0x9f, 0xa3, 0x1d,
	0x00, 0x5c, 0x6e, 0x5e, 0x67, 0xb2, 0xb4, 0x36, 0xec, 0x67, 0xca, 0x72, 0x1d, 0xa0, 0xc6, 0xb7,
	0x12, 0xdc, 0x49, 0x32, 0xef, 0x60, 0x38, 0x76, 0x6c, 0x24, 0xe7, 0xb0, 0xb3, 0xe2, 0x17, 0xc4,
	0xcc, 0x50, 0x24, 0xcb, 0x75, 0xb4, 0x7a, 0xfe, 0x82, 0xd8, 0x8a, 0xf4, 0x02, 0x19, 0xc0, 0xd6,
	0x92, 0xa7, 0x90, 0x27, 0x19, 0x30, 0xe9, 0xde, 0xa3, 0xe5, 0x31, 0x30, 0xbd, 0x40, 0x46, 0xb0,
	0xb3, 0xe2, 0x19, 0x99, 0x57, 0xcc, 0x72, 0x97, 0xbc, 0x87, 0x7d, 0x06, 0xb2, 0x6a, 0x05, 0x24,
	0x4b, 0x9f, 0x4c, 0xd7, 0xd0, 0x2a, 0x2b, 0xaf, 0xc5, 0xd6, 0xf4, 0xb3, 0x40, 0x2f, 0x10, 0x0f,
	0xb6, 0x96, 0x26, 0x33, 0x53, 0xb7, 0xf4, 0x09, 0xd6, 0x1e, 0xe5, 0x31, 0x7e, 0xf9, 0xae, 0xd2,
	0x0b, 0x6f, 0xda, 0x9f, 0x5a, 0x03, 0x47, 0x0c, 0xa3, 0x9e, 0x61, 0xfb, 0x9e, 0x39, 0x2b, 0x4c,
	0xfc, 0x4a, 0x7e, 0xc6, 0xc0, 0x37, 0x97, 0xbf, 0x81, 0x0e, 0x83, 0x85, 0x9d, 0xde, 0x86, 0xcc,
	0x7c, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0x34, 0xdf, 0x90, 0x2c, 0x2d, 0x09, 0x00, 0x00,
}
