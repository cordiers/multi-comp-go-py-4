{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "n0stack",
    "contact": {
      "name": "n0stack",
      "url": "https://github.com/n0stack/n0stack"
    },
    "version": "version not set"
  },
  "paths": {
    "/api/v0/block_storage": {
      "get": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "ListBlockStorages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0ListBlockStoragesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "CreateBlockStorage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0CreateBlockStorageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0BlockStorage"
            }
          }
        }
      }
    },
    "/api/v0/block_storage/{name}": {
      "get": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "GetBlockStorage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0BlockStorage"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "DeleteBlockStorage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0BlockStorage"
            }
          }
        }
      }
    },
    "/api/v0/block_storage/{name}:download": {
      "get": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "DownloadBlockStorage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0DownloadBlockStorageResponse"
            }
          }
        }
      }
    },
    "/api/v0/block_storage/{name}:purge": {
      "post": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "PurgeBlockStorage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    },
    "/api/v0/block_storage/{name}:undelete": {
      "post": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "UndeleteBlockStorage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0BlockStorage"
            }
          }
        }
      }
    },
    "/api/v0/block_storage:copy": {
      "post": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "CopyBlockStorage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0CopyBlockStorageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0BlockStorage"
            }
          }
        }
      }
    },
    "/api/v0/block_storage:fetch": {
      "post": {
        "tags": [
          "BlockStorageService"
        ],
        "operationId": "FetchBlockStorage",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0FetchBlockStorageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0BlockStorage"
            }
          }
        }
      }
    },
    "/api/v0/image": {
      "get": {
        "tags": [
          "ImageService"
        ],
        "operationId": "ListImages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0ListImagesResponse"
            }
          }
        }
      }
    },
    "/api/v0/image/{image_name}/registered_block_storage/{block_storage_name}": {
      "post": {
        "tags": [
          "ImageService"
        ],
        "operationId": "RegisterBlockStorage",
        "parameters": [
          {
            "type": "string",
            "name": "image_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "block_storage_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0RegisterBlockStorageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Image"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImageService"
        ],
        "operationId": "UnregisterBlockStorage",
        "parameters": [
          {
            "type": "string",
            "name": "image_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "block_storage_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Image"
            }
          }
        }
      }
    },
    "/api/v0/image/{name}": {
      "get": {
        "tags": [
          "ImageService"
        ],
        "operationId": "GetImage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Image"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ImageService"
        ],
        "operationId": "ApplyImage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0ApplyImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Image"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImageService"
        ],
        "operationId": "DeleteImage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    },
    "/api/v0/image/{name}/tag/{tag}": {
      "post": {
        "tags": [
          "ImageService"
        ],
        "operationId": "TagImage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "tag",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0TagImageRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Image"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ImageService"
        ],
        "operationId": "UntagImage",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "tag",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Image"
            }
          }
        }
      }
    },
    "/api/v0/network": {
      "get": {
        "tags": [
          "NetworkService"
        ],
        "operationId": "ListNetworks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0ListNetworksResponse"
            }
          }
        }
      }
    },
    "/api/v0/network/{name}": {
      "get": {
        "tags": [
          "NetworkService"
        ],
        "operationId": "GetNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Network"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NetworkService"
        ],
        "operationId": "ApplyNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0ApplyNetworkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Network"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NetworkService"
        ],
        "operationId": "DeleteNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    },
    "/api/v0/node": {
      "get": {
        "tags": [
          "NodeService"
        ],
        "operationId": "ListNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0ListNodesResponse"
            }
          }
        }
      }
    },
    "/api/v0/node/{name}": {
      "get": {
        "tags": [
          "NodeService"
        ],
        "operationId": "GetNode",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Node"
            }
          }
        }
      },
      "put": {
        "tags": [
          "NodeService"
        ],
        "operationId": "ApplyNode",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0ApplyNodeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0Node"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NodeService"
        ],
        "operationId": "DeleteNode",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    },
    "/api/v0/user": {
      "get": {
        "tags": [
          "UserService"
        ],
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0ListUsersResponse"
            }
          }
        }
      }
    },
    "/api/v0/user/{name}": {
      "get": {
        "tags": [
          "UserService"
        ],
        "operationId": "GetUser",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0User"
            }
          }
        }
      },
      "post": {
        "tags": [
          "UserService"
        ],
        "operationId": "CreateUser",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0CreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0User"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserService"
        ],
        "operationId": "DeleteUser",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    },
    "/api/v0/user/{user_name}/ssh_public_key/{ssh_public_key_name}": {
      "post": {
        "tags": [
          "UserService"
        ],
        "operationId": "AddSshPublicKey",
        "parameters": [
          {
            "type": "string",
            "name": "user_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ssh_public_key_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0AddSshPublicKeyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0User"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UserService"
        ],
        "operationId": "DeleteSshPublicKey",
        "parameters": [
          {
            "type": "string",
            "name": "user_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ssh_public_key_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0User"
            }
          }
        }
      }
    },
    "/api/v0/virtual_machine": {
      "get": {
        "tags": [
          "VirtualMachineService"
        ],
        "operationId": "ListVirtualMachines",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0ListVirtualMachinesResponse"
            }
          }
        }
      }
    },
    "/api/v0/virtual_machine/{name}": {
      "get": {
        "tags": [
          "VirtualMachineService"
        ],
        "operationId": "GetVirtualMachine",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualMachine"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualMachineService"
        ],
        "operationId": "DeleteVirtualMachine",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    },
    "/api/v0/virtual_machine/{name}:boot": {
      "post": {
        "tags": [
          "VirtualMachineService"
        ],
        "operationId": "BootVirtualMachine",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualMachine"
            }
          }
        }
      }
    },
    "/api/v0/virtual_machine/{name}:open_console": {
      "get": {
        "tags": [
          "VirtualMachineService"
        ],
        "operationId": "OpenConsole",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0OpenConsoleResponse"
            }
          }
        }
      }
    },
    "/api/v0/virtual_machine/{name}:reboot": {
      "post": {
        "tags": [
          "VirtualMachineService"
        ],
        "operationId": "RebootVirtualMachine",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualMachine"
            }
          }
        }
      }
    },
    "/api/v0/virtual_machine/{name}:shutdown": {
      "post": {
        "tags": [
          "VirtualMachineService"
        ],
        "operationId": "ShutdownVirtualMachine",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualMachine"
            }
          }
        }
      }
    },
    "/api/v0/virtual_router": {
      "get": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "ListVirtualRouters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0ListVirtualRoutersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "CreateVirtualRouter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0CreateVirtualRouterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualRouter"
            }
          }
        }
      }
    },
    "/api/v0/virtual_router/{name}": {
      "get": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "GetVirtualRouter",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualRouter"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "DeleteVirtualRouter",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {}
          }
        }
      }
    },
    "/api/v0/virtual_router/{virtual_router_name}/connected_network": {
      "post": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "ConnectNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "virtual_router_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0ConnectNetworkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualRouter"
            }
          }
        }
      }
    },
    "/api/v0/virtual_router/{virtual_router_name}/connected_network/{network_name}": {
      "delete": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "DisconnectNetwork",
        "parameters": [
          {
            "type": "string",
            "name": "virtual_router_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "network_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualRouter"
            }
          }
        }
      }
    },
    "/api/v0/virtual_router/{virtual_router_name}/virtual_ip": {
      "put": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "ApplyVirtualIP",
        "parameters": [
          {
            "type": "string",
            "name": "virtual_router_name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v0ApplyVirtualIPRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualRouter"
            }
          }
        }
      }
    },
    "/api/v0/virtual_router/{virtual_router_name}/virtual_ip/{virtual_ip_name}": {
      "delete": {
        "tags": [
          "VirtualRouterService"
        ],
        "operationId": "DeleteVirtualIP",
        "parameters": [
          {
            "type": "string",
            "name": "virtual_router_name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "virtual_ip_name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v0VirtualRouter"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "BlockStorageBlockStorageState": {
      "type": "string",
      "title": "- PENDING: working API",
      "default": "BLOCK_STORAGE_UNSPECIFIED",
      "enum": [
        "BLOCK_STORAGE_UNSPECIFIED",
        "PENDING",
        "AVAILABLE",
        "IN_USE",
        "PROTECTED",
        "DELETED"
      ]
    },
    "ImageRegisteredBlockStorage": {
      "type": "object",
      "properties": {
        "block_storage_name": {
          "type": "string"
        },
        "registered_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "NetworkNetworkState": {
      "description": " - NETWORK_UNSPECIFIED: falied state because failed some process on API.\n - UNKNOWN: unknown state because failed to connect for scheduled node after RUNNING.",
      "type": "string",
      "default": "NETWORK_UNSPECIFIED",
      "enum": [
        "NETWORK_UNSPECIFIED",
        "UNKNOWN",
        "AVAILABLE"
      ]
    },
    "NodeNodeState": {
      "type": "string",
      "default": "NODE_UNSPECIFIED",
      "enum": [
        "NODE_UNSPECIFIED",
        "READY",
        "NOT_READY"
      ]
    },
    "RunSSHExecutionRequestSSHExecutionVirtualMachineFilter": {
      "type": "object",
      "properties": {
        "label": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "UserUserState": {
      "type": "string",
      "title": "- PENDING: working API",
      "default": "USER_UNSPECIFIED",
      "enum": [
        "USER_UNSPECIFIED",
        "PENDING",
        "AVAILABLE"
      ]
    },
    "VirtualMachineVirtualMachineState": {
      "type": "string",
      "title": "- PENDING: working API\n - RUNNING: running vm",
      "default": "VIRTUAL_MACHINE_UNSPECIFIED",
      "enum": [
        "VIRTUAL_MACHINE_UNSPECIFIED",
        "PENDING",
        "RUNNING",
        "SHUTDOWN",
        "PAUSED"
      ]
    },
    "VirtualRouterVirtualIP": {
      "type": "object",
      "properties": {
        "network_interface_name": {
          "type": "string"
        },
        "network_name": {
          "type": "string"
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0VirtualIPTarget"
          }
        }
      }
    },
    "VirtualRouterVirtualRouterConnectedNetwork": {
      "type": "object",
      "properties": {
        "network_interface_name": {
          "type": "string"
        },
        "network_name": {
          "type": "string"
        }
      }
    },
    "VirtualRouterVirtualRouterState": {
      "type": "string",
      "title": "- UNKNOWN: unknown state because failed to connect for scheduled node after RUNNING.\n - PENDING: working API",
      "default": "VIRTUAL_ROUTER_UNSPECIFIED",
      "enum": [
        "VIRTUAL_ROUTER_UNSPECIFIED",
        "UNKNOWN",
        "PENDING",
        "AVAILABLE"
      ]
    },
    "configurationGenerateSecretResponse": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "configurationListSSHExecutionsResponse": {
      "type": "object",
      "properties": {
        "sshs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configurationSSHExecution"
          }
        }
      }
    },
    "configurationListSecretsResponse": {
      "type": "object",
      "properties": {
        "secrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/configurationSecret"
          }
        }
      }
    },
    "configurationSSHExecution": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "configurationSSHExecutionResult": {
      "type": "object",
      "properties": {
        "finished_at": {
          "type": "string",
          "format": "date-time"
        },
        "key_secret_name": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "started_at": {
          "type": "string",
          "format": "date-time"
        },
        "virtual_machine_name": {
          "type": "string"
        }
      }
    },
    "configurationSecret": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v0AddSshPublicKeyRequest": {
      "type": "object",
      "properties": {
        "ssh_public_key": {
          "type": "string"
        },
        "ssh_public_key_name": {
          "type": "string"
        },
        "user_name": {
          "type": "string"
        }
      }
    },
    "v0ApplyImageRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v0ApplyNetworkRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "domain": {
          "type": "string"
        },
        "ipv4_cidr": {
          "type": "string"
        },
        "ipv6_cidr": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v0ApplyNodeRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "availability_zone": {
          "type": "string"
        },
        "cell": {
          "type": "string"
        },
        "cpu_milli_cores": {
          "type": "integer",
          "format": "int64"
        },
        "datacenter": {
          "type": "string"
        },
        "ipmi_address": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "memory_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "rack": {
          "type": "string"
        },
        "serial": {
          "type": "string"
        },
        "storage_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "unit": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v0ApplyVirtualIPRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ipv4_address": {
          "type": "string"
        },
        "ipv6_address": {
          "type": "string"
        },
        "network_name": {
          "type": "string"
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0VirtualIPTarget"
          }
        },
        "virtual_ip_name": {
          "type": "string"
        },
        "virtual_router_name": {
          "type": "string"
        }
      }
    },
    "v0BlockStorage": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "description": "Name is a unique field.",
          "type": "string"
        },
        "node_name": {
          "type": "string"
        },
        "request_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "state": {
          "$ref": "#/definitions/BlockStorageBlockStorageState"
        },
        "storage_name": {
          "type": "string"
        }
      }
    },
    "v0Compute": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_cpu_milli_core": {
          "type": "integer",
          "format": "int64"
        },
        "limit_memory_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "request_cpu_milli_core": {
          "type": "integer",
          "format": "int64"
        },
        "request_memory_bytes": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v0ConnectNetworkRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ipv4_address": {
          "type": "string"
        },
        "ipv6_address": {
          "type": "string"
        },
        "network_name": {
          "type": "string"
        },
        "virtual_router_name": {
          "type": "string"
        }
      }
    },
    "v0CopyBlockStorageRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "request_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "source_block_storage": {
          "type": "string"
        }
      }
    },
    "v0CreateBlockStorageRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "request_bytes": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v0CreateUserRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v0CreateVirtualMachineRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "block_storage_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_cpu_milli_core": {
          "type": "integer",
          "format": "int64"
        },
        "limit_memory_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "login_username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0VirtualMachineNIC"
          }
        },
        "request_cpu_milli_core": {
          "type": "integer",
          "format": "int64"
        },
        "request_memory_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "ssh_authorized_keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "v0CreateVirtualRouterRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "v0DownloadBlockStorageResponse": {
      "type": "object",
      "properties": {
        "download_url": {
          "type": "string"
        }
      }
    },
    "v0FetchBlockStorageRequest": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "type": "string"
        },
        "request_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "source_url": {
          "type": "string"
        }
      }
    },
    "v0Image": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name is a unique field.",
          "type": "string"
        },
        "registered_block_storages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageRegisteredBlockStorage"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v0ListBlockStoragesResponse": {
      "type": "object",
      "properties": {
        "block_storages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0BlockStorage"
          }
        }
      }
    },
    "v0ListImagesResponse": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0Image"
          }
        }
      }
    },
    "v0ListNetworksResponse": {
      "type": "object",
      "properties": {
        "networks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0Network"
          }
        }
      }
    },
    "v0ListNodesResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0Node"
          }
        }
      }
    },
    "v0ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0User"
          }
        }
      }
    },
    "v0ListVirtualMachinesResponse": {
      "type": "object",
      "properties": {
        "virtual_machines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0VirtualMachine"
          }
        }
      }
    },
    "v0ListVirtualRoutersResponse": {
      "type": "object",
      "properties": {
        "virtual_routers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0VirtualRouter"
          }
        }
      }
    },
    "v0Network": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "domain": {
          "type": "string"
        },
        "ipv4_cidr": {
          "type": "string"
        },
        "ipv6_cidr": {
          "type": "string"
        },
        "labels": {
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name is a unique field.",
          "type": "string"
        },
        "reserved_network_interfaces": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v0NetworkInterface"
          }
        },
        "state": {
          "$ref": "#/definitions/NetworkNetworkState"
        }
      }
    },
    "v0NetworkInterface": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hardware_address": {
          "type": "string"
        },
        "ipv4_address": {
          "type": "string"
        },
        "ipv6_address": {
          "type": "string"
        }
      }
    },
    "v0Node": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "annotations": {
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "availability_zone": {
          "type": "string"
        },
        "cell": {
          "type": "string"
        },
        "cpu_milli_cores": {
          "type": "integer",
          "format": "int64",
          "title": "budget pool"
        },
        "datacenter": {
          "type": "string",
          "title": "physical placement"
        },
        "ipmi_address": {
          "type": "string"
        },
        "labels": {
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "memory_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "name": {
          "description": "Name is a unique field.",
          "type": "string"
        },
        "rack": {
          "type": "string"
        },
        "reserved_computes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v0Compute"
          }
        },
        "reserved_storages": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v0Storage"
          }
        },
        "serial": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/NodeNodeState"
        },
        "storage_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "unit": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "v0OpenConsoleResponse": {
      "type": "object",
      "properties": {
        "console_url": {
          "type": "string"
        }
      }
    },
    "v0RegisterBlockStorageRequest": {
      "type": "object",
      "properties": {
        "block_storage_name": {
          "type": "string"
        },
        "image_name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v0Storage": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "request_bytes": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v0TagImageRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "registered_block_storage_name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "v0User": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name is a unique field.",
          "type": "string"
        },
        "ssh_public_keys": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "$ref": "#/definitions/UserUserState"
        }
      }
    },
    "v0VirtualIPTarget": {
      "type": "object",
      "properties": {
        "network_interface_name": {
          "type": "string"
        },
        "network_name": {
          "type": "string",
          "title": "target must be selected by connected network"
        }
      }
    },
    "v0VirtualMachine": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations can store metadata used by the system for control.\nIn particular, implementation-dependent fields that can not be set as protobuf fields are targeted.\nThe control specified by n0stack may delete metadata specified by the user.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "block_storage_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "compute_name": {
          "type": "string"
        },
        "compute_node_name": {
          "type": "string"
        },
        "labels": {
          "description": "Labels stores user-defined metadata.\nThe n0stack system must not rewrite this value.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "limit_cpu_milli_core": {
          "type": "integer",
          "format": "int64"
        },
        "limit_memory_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "login_username": {
          "type": "string"
        },
        "name": {
          "description": "Name is a unique field.",
          "type": "string"
        },
        "network_interface_names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v0VirtualMachineNIC"
          }
        },
        "request_cpu_milli_core": {
          "type": "integer",
          "format": "int64"
        },
        "request_memory_bytes": {
          "type": "string",
          "format": "uint64"
        },
        "ssh_authorized_keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "$ref": "#/definitions/VirtualMachineVirtualMachineState"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "v0VirtualMachineNIC": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hardware_address": {
          "type": "string"
        },
        "ipv4_address": {
          "type": "string"
        },
        "ipv6_address": {
          "type": "string"
        },
        "network_name": {
          "type": "string"
        }
      }
    },
    "v0VirtualRouter": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "connected_network": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VirtualRouterVirtualRouterConnectedNetwork"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/VirtualRouterVirtualRouterState"
        },
        "virtual_ip": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VirtualRouterVirtualIP"
          }
        }
      }
    }
  }
}